{"version":3,"sources":["redux/actions/UserActions.js","redux/actions/UserTblActions.js","redux/actions/PromoCodeActions.js","redux/actions/index.js","utils/Errors.js","utils/Modal.js","views/Pages/PendingWorks/index.js"],"names":["loginAction","data","dispatch","type","LOGIN","error","ApiRequest","post","then","response","errors","LOGIN_ERROR","storageService","save","token","LOGIN_SUCCESS","getUsers","arguments","length","undefined","FETCH_USERS","get","page","FETCH_USERS_ERROR","FETCH_USERS_SUCCESS","list","setError","USERS_ERROR_REMOVE","updateUser","successCallback","UPDATE_USERS","put","_id","UPDATE_USERS_ERROR","UPDATE_USERS_SUCCESS","createUser","ADD_USERS","ADD_USERS_ERROR","ADD_USERS_SUCCESS","deleteUser","userId","DELETE_USERS","delete","DELETE_USERS_ERROR","DELETE_USERS_SUCCESS","getPromoCodes","FETCH_PROMO_CODES","variables","qs","stringify","concat","FETCH_PROMO_CODES_ERROR","sortBy","sortDir","filters","FETCH_PROMO_CODES_SUCCESS","updatePromoCode","UPDATE_PROMO_CODES","UPDATE_PROMO_CODES_ERROR","UPDATE_PROMO_CODES_SUCCESS","payload","createPromoCode","ADD_PROMO_CODES","ADD_PROMO_CODES_ERROR","ADD_PROMO_CODES_SUCCESS","deletePromoCode","id","DELETE_PROMO_CODES","DELETE_PROMO_CODES_ERROR","DELETE_PROMO_CODES_SUCCESS","__webpack_require__","d","__webpack_exports__","UserActions_loginAction","UserTblActions_getUsers","UserTblActions_setError","UserTblActions_updateUser","UserTblActions_createUser","UserTblActions_deleteUser","PromoCodeActions_getPromoCodes","PromoCodeActions_updatePromoCode","PromoCodeActions_createPromoCode","PromoCodeActions_deletePromoCode","Errors","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","props","keys","_","isString","Object","map","item","Array","isArray","i","push","a","createElement","key","className","role","AdminModal","_this","_Users_ashish_Sites_essbee_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","onSubmit","onSubmitCallBack","toggle","onClose","closeCallBack","state","modal","open","setState","prevState","react__WEBPACK_IMPORTED_MODULE_5___default","reactstrap__WEBPACK_IMPORTED_MODULE_6__","isOpen","reactstrap__WEBPACK_IMPORTED_MODULE_7__","title","reactstrap__WEBPACK_IMPORTED_MODULE_8__","children","reactstrap__WEBPACK_IMPORTED_MODULE_9__","footer","React","Component","PendingWorks","xs","lg","reactstrap__WEBPACK_IMPORTED_MODULE_10__","connect","_ref","ownProps","usersTbl"],"mappings":"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","file":"static/js/61.c5c74fe7.chunk.js","sourcesContent":["import {LOGIN, LOGIN_SUCCESS, LOGIN_ERROR} from '@redux/types'\nimport ApiRequest from '@utils/ApiRequest'\nimport storageService from '@utils/StorageService'\n\nexport const loginAction = (data) => {\n    return (dispatch) => {\n        dispatch({\n            type: LOGIN,\n            error: null\n        })\n\n        ApiRequest.post('admin/login', data)\n            .then((response) => {\n\n                if(response.error || response.errors)\n                {\n                    dispatch({\n                        type: LOGIN_ERROR,\n                        error: response.errors\n                    })\n                }else{\n                    storageService.save('token', response.token)\n                    dispatch({\n                        type: LOGIN_SUCCESS,\n                        token: response.token\n                    })\n                }\n            })\n    }\n};\n\n","import {\n    FETCH_USERS,\n    FETCH_USERS_SUCCESS,\n    FETCH_USERS_ERROR,\n    UPDATE_USERS,\n    UPDATE_USERS_SUCCESS,\n    UPDATE_USERS_ERROR,\n    ADD_USERS,\n    ADD_USERS_SUCCESS,\n    ADD_USERS_ERROR,\n    DELETE_USERS,\n    DELETE_USERS_SUCCESS,\n    DELETE_USERS_ERROR,\n    USERS_ERROR_REMOVE\n} from '@redux/types'\n\nimport ApiRequest from '@utils/ApiRequest'\n\nexport const getUsers = (data = {}) => {\n    return (dispatch) => {\n        dispatch({\n            type: FETCH_USERS,\n            error: null\n        })\n\n        ApiRequest.get('admin/users?page='+data.page, data)\n            .then((response) => {\n\n                if(response.error || response.errors)\n                {\n                    dispatch({\n                        type: FETCH_USERS_ERROR,\n                        error: response.errors\n                    })\n                }else{\n                    dispatch({\n                        type: FETCH_USERS_SUCCESS,\n                        list: response\n                    })\n                }\n            })\n    }\n};\n\nexport const setError = (type = USERS_ERROR_REMOVE, error = null) => {\n    return (dispatch) => {\n        dispatch({\n            type,\n            error\n        })\n    }\n};\n\nexport const updateUser = (data, successCallback) => {\n    return (dispatch) => {\n        dispatch({\n            type: UPDATE_USERS,\n            error: null\n        })\n\n        ApiRequest.put('admin/users'+data._id, data)\n            .then((response) => {\n\n                if(response.error || response.errors)\n                {\n                    dispatch({\n                        type: UPDATE_USERS_ERROR,\n                        error: response.errors\n                    })\n                }else{\n                    dispatch({\n                        type: UPDATE_USERS_SUCCESS,\n                    })\n\n                    if(successCallback)\n                    {\n                        successCallback()\n                    }\n                }\n            })\n    }\n};\n\nexport const createUser = (data, successCallback) => {\n    return (dispatch) => {\n        dispatch({\n            type: ADD_USERS,\n            error: null\n        })\n\n        ApiRequest.post('admin/users', data)\n            .then((response) => {\n\n                if(response.error || response.errors)\n                {\n                    dispatch({\n                        type: ADD_USERS_ERROR,\n                        error: response.errors\n                    })\n                }else{\n                    dispatch({\n                        type: ADD_USERS_SUCCESS,\n                    })\n\n                    if(successCallback)\n                    {\n                        successCallback()\n                    }\n                }\n            })\n    }\n};\n\nexport const deleteUser = (userId, successCallback) => {\n    return (dispatch) => {\n        dispatch({\n            type: DELETE_USERS,\n            error: null\n        })\n\n        ApiRequest.delete('admin/users', userId)\n            .then((response) => {\n\n                if(response.error || response.errors)\n                {\n                    dispatch({\n                        type: DELETE_USERS_ERROR,\n                        error: response.errors\n                    })\n                }else{\n                    dispatch({\n                        type: DELETE_USERS_SUCCESS,\n                    })\n\n                    if(successCallback)\n                    {\n                        successCallback()\n                    }\n                }\n            })\n    }\n};\n\n","import {\n    FETCH_PROMO_CODES,\n    FETCH_PROMO_CODES_SUCCESS,\n    FETCH_PROMO_CODES_ERROR,\n    UPDATE_PROMO_CODES,\n    UPDATE_PROMO_CODES_SUCCESS,\n    UPDATE_PROMO_CODES_ERROR,\n    ADD_PROMO_CODES,\n    ADD_PROMO_CODES_SUCCESS,\n    ADD_PROMO_CODES_ERROR,\n    DELETE_PROMO_CODES,\n    DELETE_PROMO_CODES_SUCCESS,\n    DELETE_PROMO_CODES_ERROR,\n    PROMO_CODES_ERROR_REMOVE\n} from '@redux/types'\n\nimport ApiRequest from '@utils/ApiRequest'\nimport qs from 'qs'\n\nexport const getPromoCodes = (data = {}) => {\n    return (dispatch) => {\n        dispatch({\n            type: FETCH_PROMO_CODES,\n            error: null\n        })\n\n        const variables = qs.stringify(data);\n        ApiRequest.get(`admin/promo_codes?${variables}`, data)\n            .then((response) => {\n\n                if(response.error || response.errors)\n                {\n                    dispatch({\n                        type: FETCH_PROMO_CODES_ERROR,\n                        error: response.errors,\n                        sortBy: data.sortBy,\n                        sortDir: data.sortDir,\n                        filters: data.filters\n                    })\n                }else{\n                    dispatch({\n                        type: FETCH_PROMO_CODES_SUCCESS,\n                        list: response,\n                        sortBy: data.sortBy,\n                        sortDir: data.sortDir,\n                        filters: data.filters\n                    })\n                }\n            })\n    }\n};\n\nexport const setError = (type = PROMO_CODES_ERROR_REMOVE, error = null) => {\n    return (dispatch) => {\n        dispatch({\n            type,\n            error\n        })\n    }\n};\n\nexport const updatePromoCode = (data, successCallback) => {\n    return (dispatch) => {\n        dispatch({\n            type: UPDATE_PROMO_CODES,\n            error: null\n        })\n\n        ApiRequest.put('admin/promo_codes/'+data._id, data)\n            .then((response) => {\n\n                if(response.error || response.errors)\n                {\n                    dispatch({\n                        type: UPDATE_PROMO_CODES_ERROR,\n                        error: response.errors\n                    })\n                }else{\n                    dispatch({\n                        type: UPDATE_PROMO_CODES_SUCCESS,\n                        payload: response\n                    })\n\n                    if(successCallback)\n                    {\n                        successCallback()\n                    }\n                }\n            })\n    }\n};\n\nexport const createPromoCode = (data, successCallback) => {\n    return (dispatch) => {\n        dispatch({\n            type: ADD_PROMO_CODES,\n            error: null\n        })\n\n        ApiRequest.post('admin/promo_codes', data)\n            .then((response) => {\n\n                if(response.error || response.errors)\n                {\n                    dispatch({\n                        type: ADD_PROMO_CODES_ERROR,\n                        error: response.errors\n                    })\n                }else{\n                    dispatch({\n                        type: ADD_PROMO_CODES_SUCCESS,\n                        payload: response\n                    })\n\n                    if(successCallback)\n                    {\n                        successCallback()\n                    }\n                }\n            })\n    }\n};\n\nexport const deletePromoCode = (id, successCallback) => {\n    return (dispatch) => {\n        dispatch({\n            type: DELETE_PROMO_CODES,\n            error: null\n        })\n\n        ApiRequest.delete('admin/promo_codes/'+id)\n            .then((response) => {\n\n                if(response.error || response.errors)\n                {\n                    dispatch({\n                        type: DELETE_PROMO_CODES_ERROR,\n                        error: response.errors\n                    })\n                }else{\n                    dispatch({\n                        type: DELETE_PROMO_CODES_SUCCESS,\n                        payload: response\n                    })\n\n                    if(successCallback)\n                    {\n                        successCallback()\n                    }\n                }\n            })\n    }\n};\n\n","export * from './UserActions'\nexport * from './UserTblActions'\nexport * from './PromoCodeActions'\n","import React from 'react'\nimport _ from \"lodash\";\nimport {Alert} from 'reactstrap';\n\nexport default function Errors(props)\n{\n    if(!props.errors)\n    {\n        return null;\n    }\n\n    let keys = _.isString(props.errors)?null:Object.keys(props.errors)\n    let errors = []\n\n    if(keys && keys.length)\n    {\n        keys.map((item) => {\n            if(Array.isArray(props.errors[item])){\n                for(let i in props.errors[item]){\n                    errors.push(\n                        <div key={item+i}>\n                            {props.errors[item][i]}\n                        </div>\n                    )\n\n                }\n            }\n        })\n    }else if(_.isString(props.errors)){\n        errors.push(\n            <div key={1}>\n            {props.errors}\n            </div>\n        )\n    }\n    return (\n        <div key={1} className=\"alert alert-danger\" role=\"alert\">\n            {errors}\n        </div>\n    )\n}\n","import React from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nexport default class AdminModal extends React.Component{\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            modal: props.open\n        }\n    }\n\n    onSubmit = () => {\n        if(this.props.onSubmitCallBack)\n        {\n            this.props.onSubmitCallBack()\n        }else {\n            this.toggle()\n        }\n    }\n\n    toggle(){\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    }\n\n    onClose = () =>  {\n\n        if(this.props.closeCallBack)\n        {\n            this.props.closeCallBack()\n        }else {\n            this.toggle()\n        }\n    }\n\n    render(){\n        return (\n            <Modal isOpen={this.state.modal} toggle={this.onClose} className={this.props.className}>\n                <ModalHeader toggle={this.onClose}>{this.props.title}</ModalHeader>\n                <ModalBody>\n                    {this.props.children}\n                </ModalBody>\n                <ModalFooter>\n                    {this.props.footer}\n                </ModalFooter>\n            </Modal>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Badge, Card, CardBody, CardHeader, Col, Row, Table, Button, Form,\n    FormGroup,\n    Input,\n    Label,\n    UncontrolledPopover,\n    PopoverBody,\n    PopoverHeader,\n    Spinner\n} from 'reactstrap';\nimport {connect} from 'react-redux'\nimport {getUsers, updateUser, createUser, deleteUser, setError} from '@redux/actions'\nimport Modal from '@utils/Modal'\nimport _ from 'lodash'\nimport Paginationbs4 from \"react-js-pagination\";\n//https://www.npmjs.com/package/react-js-pagination-bs4\n\nimport Errors from '@utils/Errors'\nimport ReactSelect from 'react-select'\n//https://github.com/JedWatson/react-select\nimport {\n    FETCH_USERS,\n    FETCH_USERS_SUCCESS,\n    FETCH_USERS_ERROR,\n    UPDATE_USERS,\n    UPDATE_USERS_SUCCESS,\n    UPDATE_USERS_ERROR,\n    ADD_USERS,\n    ADD_USERS_SUCCESS,\n    ADD_USERS_ERROR,\n    DELETE_USERS,\n    DELETE_USERS_SUCCESS,\n    DELETE_USERS_ERROR,\n    USERS_ERROR_REMOVE\n} from '@redux/types'\n\nclass PendingWorks extends Component {\n  render() {\n    return (\n        <div className=\"animated fadeIn\">\n            <Row>\n                <Col xs=\"12\" lg=\"12\">\n                    <Card>\n                        <CardHeader>\n                            <i className=\"fa fa-scissors\"></i> Create New Agent Page\n                        </CardHeader>\n\n                        <CardBody className='custom_cardbody'>\n                            <p>Hii</p>\n                        </CardBody>\n\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n\n    );\n  }\n}\n\nconst mapStateToProps = ({usersTbl}, ownProps) => ({usersTbl})\nexport default connect(mapStateToProps, {getUsers, updateUser, createUser, deleteUser, setError})(PendingWorks)\n"],"sourceRoot":""}