{"version":3,"sources":["redux/actions/UserActions.js","redux/actions/UserTblActions.js","redux/actions/PromoCodeActions.js","redux/actions/index.js","utils/Errors.js","utils/Modal.js","../node_modules/reactstrap/es/Table.js","../node_modules/reactstrap/es/Spinner.js","views/Pages/CreateNewCategory/index.js"],"names":["loginAction","data","dispatch","type","LOGIN","error","ApiRequest","post","then","response","errors","LOGIN_ERROR","storageService","save","token","LOGIN_SUCCESS","getUsers","arguments","length","undefined","FETCH_USERS","get","page","FETCH_USERS_ERROR","FETCH_USERS_SUCCESS","list","setError","USERS_ERROR_REMOVE","updateUser","successCallback","UPDATE_USERS","put","_id","UPDATE_USERS_ERROR","UPDATE_USERS_SUCCESS","createUser","ADD_USERS","ADD_USERS_ERROR","ADD_USERS_SUCCESS","deleteUser","userId","DELETE_USERS","delete","DELETE_USERS_ERROR","DELETE_USERS_SUCCESS","getPromoCodes","FETCH_PROMO_CODES","variables","qs","stringify","concat","FETCH_PROMO_CODES_ERROR","sortBy","sortDir","filters","FETCH_PROMO_CODES_SUCCESS","updatePromoCode","UPDATE_PROMO_CODES","UPDATE_PROMO_CODES_ERROR","UPDATE_PROMO_CODES_SUCCESS","payload","createPromoCode","ADD_PROMO_CODES","ADD_PROMO_CODES_ERROR","ADD_PROMO_CODES_SUCCESS","deletePromoCode","id","DELETE_PROMO_CODES","DELETE_PROMO_CODES_ERROR","DELETE_PROMO_CODES_SUCCESS","__webpack_require__","d","__webpack_exports__","UserActions_loginAction","UserTblActions_getUsers","UserTblActions_setError","UserTblActions_updateUser","UserTblActions_createUser","UserTblActions_deleteUser","PromoCodeActions_getPromoCodes","PromoCodeActions_updatePromoCode","PromoCodeActions_createPromoCode","PromoCodeActions_deletePromoCode","Errors","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","props","keys","_","isString","Object","map","item","Array","isArray","i","push","a","createElement","key","className","role","AdminModal","_this","_Users_ashish_Sites_essbee_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","onSubmit","onSubmitCallBack","toggle","onClose","closeCallBack","state","modal","open","setState","prevState","react__WEBPACK_IMPORTED_MODULE_5___default","reactstrap__WEBPACK_IMPORTED_MODULE_6__","isOpen","reactstrap__WEBPACK_IMPORTED_MODULE_7__","title","reactstrap__WEBPACK_IMPORTED_MODULE_8__","children","reactstrap__WEBPACK_IMPORTED_MODULE_9__","footer","React","Component","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","string","cssModule","object","size","bordered","bool","borderless","striped","inverse","dark","hover","responsive","oneOfType","tag","responsiveTag","innerRef","func","Table","Tag","ResponsiveTag","attributes","classes","table","ref","responsiveClassName","defaultProps","color","Spinner","options","value","label","CreateNewCategory","user","selectedOption","handleChange","console","log","_this2","usersTbl","current_page","modalClose","_Users_ashish_Sites_essbee_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","index","_this3","react__WEBPACK_IMPORTED_MODULE_6___default","xs","lg","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","disabled","onClick","e","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","style","marginTop","marginLeft","reactstrap__WEBPACK_IMPORTED_MODULE_15__","_utils_Modal__WEBPACK_IMPORTED_MODULE_22__","name","modalSubmit","_utils_Errors__WEBPACK_IMPORTED_MODULE_25__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","row","md","reactstrap__WEBPACK_IMPORTED_MODULE_18__","htmlFor","placeholder","react_select__WEBPACK_IMPORTED_MODULE_19__","onChange","connect","_ref","ownProps"],"mappings":"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","file":"static/js/55.b2591799.chunk.js","sourcesContent":["import {LOGIN, LOGIN_SUCCESS, LOGIN_ERROR} from '@redux/types'\nimport ApiRequest from '@utils/ApiRequest'\nimport storageService from '@utils/StorageService'\n\nexport const loginAction = (data) => {\n    return (dispatch) => {\n        dispatch({\n            type: LOGIN,\n            error: null\n        })\n\n        ApiRequest.post('admin/login', data)\n            .then((response) => {\n\n                if(response.error || response.errors)\n                {\n                    dispatch({\n                        type: LOGIN_ERROR,\n                        error: response.errors\n                    })\n                }else{\n                    storageService.save('token', response.token)\n                    dispatch({\n                        type: LOGIN_SUCCESS,\n                        token: response.token\n                    })\n                }\n            })\n    }\n};\n\n","import {\n    FETCH_USERS,\n    FETCH_USERS_SUCCESS,\n    FETCH_USERS_ERROR,\n    UPDATE_USERS,\n    UPDATE_USERS_SUCCESS,\n    UPDATE_USERS_ERROR,\n    ADD_USERS,\n    ADD_USERS_SUCCESS,\n    ADD_USERS_ERROR,\n    DELETE_USERS,\n    DELETE_USERS_SUCCESS,\n    DELETE_USERS_ERROR,\n    USERS_ERROR_REMOVE\n} from '@redux/types'\n\nimport ApiRequest from '@utils/ApiRequest'\n\nexport const getUsers = (data = {}) => {\n    return (dispatch) => {\n        dispatch({\n            type: FETCH_USERS,\n            error: null\n        })\n\n        ApiRequest.get('admin/users?page='+data.page, data)\n            .then((response) => {\n\n                if(response.error || response.errors)\n                {\n                    dispatch({\n                        type: FETCH_USERS_ERROR,\n                        error: response.errors\n                    })\n                }else{\n                    dispatch({\n                        type: FETCH_USERS_SUCCESS,\n                        list: response\n                    })\n                }\n            })\n    }\n};\n\nexport const setError = (type = USERS_ERROR_REMOVE, error = null) => {\n    return (dispatch) => {\n        dispatch({\n            type,\n            error\n        })\n    }\n};\n\nexport const updateUser = (data, successCallback) => {\n    return (dispatch) => {\n        dispatch({\n            type: UPDATE_USERS,\n            error: null\n        })\n\n        ApiRequest.put('admin/users'+data._id, data)\n            .then((response) => {\n\n                if(response.error || response.errors)\n                {\n                    dispatch({\n                        type: UPDATE_USERS_ERROR,\n                        error: response.errors\n                    })\n                }else{\n                    dispatch({\n                        type: UPDATE_USERS_SUCCESS,\n                    })\n\n                    if(successCallback)\n                    {\n                        successCallback()\n                    }\n                }\n            })\n    }\n};\n\nexport const createUser = (data, successCallback) => {\n    return (dispatch) => {\n        dispatch({\n            type: ADD_USERS,\n            error: null\n        })\n\n        ApiRequest.post('admin/users', data)\n            .then((response) => {\n\n                if(response.error || response.errors)\n                {\n                    dispatch({\n                        type: ADD_USERS_ERROR,\n                        error: response.errors\n                    })\n                }else{\n                    dispatch({\n                        type: ADD_USERS_SUCCESS,\n                    })\n\n                    if(successCallback)\n                    {\n                        successCallback()\n                    }\n                }\n            })\n    }\n};\n\nexport const deleteUser = (userId, successCallback) => {\n    return (dispatch) => {\n        dispatch({\n            type: DELETE_USERS,\n            error: null\n        })\n\n        ApiRequest.delete('admin/users', userId)\n            .then((response) => {\n\n                if(response.error || response.errors)\n                {\n                    dispatch({\n                        type: DELETE_USERS_ERROR,\n                        error: response.errors\n                    })\n                }else{\n                    dispatch({\n                        type: DELETE_USERS_SUCCESS,\n                    })\n\n                    if(successCallback)\n                    {\n                        successCallback()\n                    }\n                }\n            })\n    }\n};\n\n","import {\n    FETCH_PROMO_CODES,\n    FETCH_PROMO_CODES_SUCCESS,\n    FETCH_PROMO_CODES_ERROR,\n    UPDATE_PROMO_CODES,\n    UPDATE_PROMO_CODES_SUCCESS,\n    UPDATE_PROMO_CODES_ERROR,\n    ADD_PROMO_CODES,\n    ADD_PROMO_CODES_SUCCESS,\n    ADD_PROMO_CODES_ERROR,\n    DELETE_PROMO_CODES,\n    DELETE_PROMO_CODES_SUCCESS,\n    DELETE_PROMO_CODES_ERROR,\n    PROMO_CODES_ERROR_REMOVE\n} from '@redux/types'\n\nimport ApiRequest from '@utils/ApiRequest'\nimport qs from 'qs'\n\nexport const getPromoCodes = (data = {}) => {\n    return (dispatch) => {\n        dispatch({\n            type: FETCH_PROMO_CODES,\n            error: null\n        })\n\n        const variables = qs.stringify(data);\n        ApiRequest.get(`admin/promo_codes?${variables}`, data)\n            .then((response) => {\n\n                if(response.error || response.errors)\n                {\n                    dispatch({\n                        type: FETCH_PROMO_CODES_ERROR,\n                        error: response.errors,\n                        sortBy: data.sortBy,\n                        sortDir: data.sortDir,\n                        filters: data.filters\n                    })\n                }else{\n                    dispatch({\n                        type: FETCH_PROMO_CODES_SUCCESS,\n                        list: response,\n                        sortBy: data.sortBy,\n                        sortDir: data.sortDir,\n                        filters: data.filters\n                    })\n                }\n            })\n    }\n};\n\nexport const setError = (type = PROMO_CODES_ERROR_REMOVE, error = null) => {\n    return (dispatch) => {\n        dispatch({\n            type,\n            error\n        })\n    }\n};\n\nexport const updatePromoCode = (data, successCallback) => {\n    return (dispatch) => {\n        dispatch({\n            type: UPDATE_PROMO_CODES,\n            error: null\n        })\n\n        ApiRequest.put('admin/promo_codes/'+data._id, data)\n            .then((response) => {\n\n                if(response.error || response.errors)\n                {\n                    dispatch({\n                        type: UPDATE_PROMO_CODES_ERROR,\n                        error: response.errors\n                    })\n                }else{\n                    dispatch({\n                        type: UPDATE_PROMO_CODES_SUCCESS,\n                        payload: response\n                    })\n\n                    if(successCallback)\n                    {\n                        successCallback()\n                    }\n                }\n            })\n    }\n};\n\nexport const createPromoCode = (data, successCallback) => {\n    return (dispatch) => {\n        dispatch({\n            type: ADD_PROMO_CODES,\n            error: null\n        })\n\n        ApiRequest.post('admin/promo_codes', data)\n            .then((response) => {\n\n                if(response.error || response.errors)\n                {\n                    dispatch({\n                        type: ADD_PROMO_CODES_ERROR,\n                        error: response.errors\n                    })\n                }else{\n                    dispatch({\n                        type: ADD_PROMO_CODES_SUCCESS,\n                        payload: response\n                    })\n\n                    if(successCallback)\n                    {\n                        successCallback()\n                    }\n                }\n            })\n    }\n};\n\nexport const deletePromoCode = (id, successCallback) => {\n    return (dispatch) => {\n        dispatch({\n            type: DELETE_PROMO_CODES,\n            error: null\n        })\n\n        ApiRequest.delete('admin/promo_codes/'+id)\n            .then((response) => {\n\n                if(response.error || response.errors)\n                {\n                    dispatch({\n                        type: DELETE_PROMO_CODES_ERROR,\n                        error: response.errors\n                    })\n                }else{\n                    dispatch({\n                        type: DELETE_PROMO_CODES_SUCCESS,\n                        payload: response\n                    })\n\n                    if(successCallback)\n                    {\n                        successCallback()\n                    }\n                }\n            })\n    }\n};\n\n","export * from './UserActions'\nexport * from './UserTblActions'\nexport * from './PromoCodeActions'\n","import React from 'react'\nimport _ from \"lodash\";\nimport {Alert} from 'reactstrap';\n\nexport default function Errors(props)\n{\n    if(!props.errors)\n    {\n        return null;\n    }\n\n    let keys = _.isString(props.errors)?null:Object.keys(props.errors)\n    let errors = []\n\n    if(keys && keys.length)\n    {\n        keys.map((item) => {\n            if(Array.isArray(props.errors[item])){\n                for(let i in props.errors[item]){\n                    errors.push(\n                        <div key={item+i}>\n                            {props.errors[item][i]}\n                        </div>\n                    )\n\n                }\n            }\n        })\n    }else if(_.isString(props.errors)){\n        errors.push(\n            <div key={1}>\n            {props.errors}\n            </div>\n        )\n    }\n    return (\n        <div key={1} className=\"alert alert-danger\" role=\"alert\">\n            {errors}\n        </div>\n    )\n}\n","import React from 'react'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nexport default class AdminModal extends React.Component{\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            modal: props.open\n        }\n    }\n\n    onSubmit = () => {\n        if(this.props.onSubmitCallBack)\n        {\n            this.props.onSubmitCallBack()\n        }else {\n            this.toggle()\n        }\n    }\n\n    toggle(){\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    }\n\n    onClose = () =>  {\n\n        if(this.props.closeCallBack)\n        {\n            this.props.closeCallBack()\n        }else {\n            this.toggle()\n        }\n    }\n\n    render(){\n        return (\n            <Modal isOpen={this.state.modal} toggle={this.onClose} className={this.props.className}>\n                <ModalHeader toggle={this.onClose}>{this.props.title}</ModalHeader>\n                <ModalBody>\n                    {this.props.children}\n                </ModalBody>\n                <ModalFooter>\n                    {this.props.footer}\n                </ModalFooter>\n            </Modal>\n        )\n    }\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  inverse: deprecated(PropTypes.bool, 'Please use the prop \"dark\"'),\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      inverse = props.inverse,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"inverse\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark || inverse ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive;\n    return React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import React, { Component } from 'react';\nimport { Badge, Card, CardBody, CardHeader, Col, Row, Table, Button, ButtonGroup, Form,\n    FormGroup,\n    Input,\n    Label,\n    UncontrolledPopover,\n    PopoverBody,\n    PopoverHeader,\n    Spinner\n} from 'reactstrap';\nimport Select from 'react-select';\nimport {connect} from 'react-redux'\nimport {getUsers, updateUser, createUser, deleteUser, setError} from '@redux/actions'\nimport Modal from '@utils/Modal'\nimport _ from 'lodash'\nimport Paginationbs4 from \"react-js-pagination\";\n//https://www.npmjs.com/package/react-js-pagination-bs4\n\nimport Errors from '@utils/Errors'\nimport ReactSelect from 'react-select'\n//https://github.com/JedWatson/react-select\nimport {\n    FETCH_USERS,\n    FETCH_USERS_SUCCESS,\n    FETCH_USERS_ERROR,\n    UPDATE_USERS,\n    UPDATE_USERS_SUCCESS,\n    UPDATE_USERS_ERROR,\n    ADD_USERS,\n    ADD_USERS_SUCCESS,\n    ADD_USERS_ERROR,\n    DELETE_USERS,\n    DELETE_USERS_SUCCESS,\n    DELETE_USERS_ERROR,\n    USERS_ERROR_REMOVE\n} from '@redux/types'\n\n\nconst options = [\n    { value: 'knitted', label: 'Knitted' },\n    { value: 'jacketing', label: 'Jacketing' },\n];\n\nclass CreateNewCategory extends Component {\n    state = {\n        user: null,\n        selectedOption: null,\n    }\n\n    handleChange = (selectedOption) => {\n        this.setState({ selectedOption });\n        console.log(`Option selected:`, selectedOption);\n    }\n\n    modalClose(){\n        this.setState({user: null})\n    }\n\n    modalSubmit(){\n        //console.log('User: '  , this.state.user)\n        if(this.state.user._id)\n        {\n            this.props.updateUser(this.state.user, () => {\n                this.props.getUsers({page: this.props.usersTbl.list.current_page})\n                this.modalClose()\n            })\n        }else{\n            this.props.createUser(this.state.user, () => {\n                this.props.getUsers({page: this.props.usersTbl.list.current_page})\n                this.modalClose()\n            })\n        }\n\n    }\n\n    onModalChange(value, key){\n        this.state.user[key] = value\n        this.setState({user: {...this.state.user}})\n    }\n\n    loadUser(index){\n        this.props.setError()\n        this.setState({user: {...this.props.usersTbl.list.data[index]}})\n    }\n\n    render() {\n        const { usersTbl } = this.props\n        const { selectedOption } = this.state;\n        return (\n            <div className=\"animated fadeIn\">\n                <Row>\n                    <Col xs=\"12\" lg=\"12\">\n                        <Card>\n                            <CardHeader className={'bg-black'}>\n                                <i className=\"fa fa-superpowers\"></i> Categories\n                            </CardHeader>\n                            {(this.props.usersTbl.type != FETCH_USERS) &&\n                            <CardBody>\n                                <div className={'d-flex align-items-center justify-content-between'}>\n                                    <Button disabled className=\"btn btn-danger mb-1 text-white\">Delete all</Button>\n                                    <Button onClick={(e) => {\n                                        this.props.setError()\n                                        this.setState({user: {}})\n                                    }} className=\"btn btn-info mb-1 text-white\">Add Category</Button>\n                                </div>\n                                <Table responsive striped>\n                                    <thead>\n                                    <tr>\n                                        <th><Input type=\"checkbox\" style={{marginTop: '-16px', marginLeft: 0}} /></th>\n                                        <th>Category Title</th>\n                                        <th>Category Name</th>\n                                        <th></th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    <tr>\n                                        <td><Input type=\"checkbox\" className={'ml-0'} /></td>\n                                        <td>Knitted</td>\n                                        <td>KGS</td>\n                                        <td>\n                                            <Button color=\"secondary\"><i className={'fa fa-edit'}></i></Button>\n                                            <Button color=\"danger\" className={'ml-3'}><i className={'fa fa-close'}></i></Button>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td><Input type=\"checkbox\" className={'ml-0'} /></td>\n                                        <td>Knitted</td>\n                                        <td>KGS</td>\n                                        <td>\n                                            <Button color=\"secondary\"><i className={'fa fa-edit'}></i></Button>\n                                            <Button color=\"danger\" className={'ml-3'}><i className={'fa fa-close'}></i></Button>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td><Input type=\"checkbox\" className={'ml-0'} /></td>\n                                        <td>Knitted</td>\n                                        <td>KGS</td>\n                                        <td>\n                                            <Button color=\"secondary\"><i className={'fa fa-edit'}></i></Button>\n                                            <Button color=\"danger\" className={'ml-3'}><i className={'fa fa-close'}></i></Button>\n                                        </td>\n                                    </tr>\n                                    </tbody>\n                                </Table>\n                            </CardBody>\n                            }\n                            {(this.props.usersTbl.type == FETCH_USERS) &&\n                            <CardBody>\n                                <Spinner size=\"sm\" color=\"secondary\" />\n                            </CardBody>\n                            }\n                        </Card>\n                    </Col>\n                </Row>\n                {this.state.user &&\n                <Modal\n                    title={this.state.user._id?'Edit '+this.state.user.name: 'Add New Category'}\n                    open={true}\n                    footer={\n                        <div>\n                            <Button className=\"mr-1\" color=\"primary\" onClick={(e) => this.modalSubmit()}>\n                                Submit\n                                {(this.props.usersTbl.type == ADD_USERS || this.props.usersTbl.type == UPDATE_USERS) &&\n                                <Spinner size=\"sm\" color=\"secondary\" />}\n                            </Button>\n                            <Button color=\"secondary\" onClick={() => this.modalClose()}>Cancel</Button>\n                        </div>\n                    }>\n                    {usersTbl.error && <Errors errors={usersTbl.error[0]} />}\n                    <Form className=\"form-horizontal\">\n                        <FormGroup row>\n                            <Col md=\"4\" className={'d-flex align-items-center'}>\n                                <Label htmlFor=\"text-input\" className={'mb-0'}>Category Title :</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\">\n                                <Input type=\"text\" placeholder=\"Enter Item Name\" />\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Col md=\"4\" className={'d-flex align-items-center'}>\n                                <Label htmlFor=\"text-input\" className={'mb-0'}>Category :</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"8\">\n                                <Select\n                                    value={selectedOption}\n                                    onChange={this.handleChange}\n                                    options={options}\n                                />\n                            </Col>\n                        </FormGroup>\n\n                    </Form>\n                </Modal>}\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = ({usersTbl}, ownProps) => ({usersTbl})\nexport default connect(mapStateToProps, {getUsers, updateUser, createUser, deleteUser, setError})(CreateNewCategory)\n"],"sourceRoot":""}